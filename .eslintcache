[{"/Users/vasekmlejnsky/Developer/devbook/src/index.tsx":"1","/Users/vasekmlejnsky/Developer/devbook/src/serviceWorker.ts":"2","/Users/vasekmlejnsky/Developer/devbook/src/mainProcess/index.ts":"3","/Users/vasekmlejnsky/Developer/devbook/src/App/index.tsx":"4","/Users/vasekmlejnsky/Developer/devbook/src/Home/SearchInput.tsx":"5","/Users/vasekmlejnsky/Developer/devbook/src/Home/index.tsx":"6","/Users/vasekmlejnsky/Developer/devbook/src/Preferences/index.tsx":"7","/Users/vasekmlejnsky/Developer/devbook/src/Onboarding/index.tsx":"8","/Users/vasekmlejnsky/Developer/devbook/src/Home/HotkeysPanel/Hotkey.tsx":"9","/Users/vasekmlejnsky/Developer/devbook/src/Home/SearchItemFocusState.ts":"10","/Users/vasekmlejnsky/Developer/devbook/src/hooks/useIPCRenderer.ts":"11","/Users/vasekmlejnsky/Developer/devbook/src/Home/StackOverflow/StackOverflowModal.tsx":"12","/Users/vasekmlejnsky/Developer/devbook/src/Home/StackOverflow/StackOverflowItem.tsx":"13","/Users/vasekmlejnsky/Developer/devbook/src/Home/GitHub/CodeModal.tsx":"14","/Users/vasekmlejnsky/Developer/devbook/src/Home/GitHub/CodeItem.tsx":"15","/Users/vasekmlejnsky/Developer/devbook/src/components/Loader.tsx":"16","/Users/vasekmlejnsky/Developer/devbook/src/Preferences/Pages/GeneralPreferences.tsx":"17","/Users/vasekmlejnsky/Developer/devbook/src/Preferences/Pages/Integrations.tsx":"18","/Users/vasekmlejnsky/Developer/devbook/src/Onboarding/pages/Introduction.tsx":"19","/Users/vasekmlejnsky/Developer/devbook/src/Onboarding/pages/Shortcut.tsx":"20","/Users/vasekmlejnsky/Developer/devbook/src/Home/HotkeysPanel/index.ts":"21","/Users/vasekmlejnsky/Developer/devbook/src/hooks/useDebounce.ts":"22","/Users/vasekmlejnsky/Developer/devbook/src/Home/Docs/index.ts":"23","/Users/vasekmlejnsky/Developer/devbook/src/search/stackOverflow.ts":"24","/Users/vasekmlejnsky/Developer/devbook/src/search/gitHub.ts":"25","/Users/vasekmlejnsky/Developer/devbook/src/search/docs.ts":"26","/Users/vasekmlejnsky/Developer/devbook/src/components/Button.tsx":"27","/Users/vasekmlejnsky/Developer/devbook/src/Home/StackOverflow/StackOverflowBody.tsx":"28","/Users/vasekmlejnsky/Developer/devbook/src/Home/GitHub/Code.tsx":"29","/Users/vasekmlejnsky/Developer/devbook/src/Preferences/Pages/Base.tsx":"30","/Users/vasekmlejnsky/Developer/devbook/src/Home/HotkeysPanel/GitHubCode/ModalHotkeysPanel.tsx":"31","/Users/vasekmlejnsky/Developer/devbook/src/Home/HotkeysPanel/StackOverflow/SearchHotkeysPanel.tsx":"32","/Users/vasekmlejnsky/Developer/devbook/src/Home/HotkeysPanel/Docs/SearchHotkeysPanel.tsx":"33","/Users/vasekmlejnsky/Developer/devbook/src/Home/HotkeysPanel/StackOverflow/ModalHotkeysPanel.tsx":"34","/Users/vasekmlejnsky/Developer/devbook/src/Home/Docs/DocPage.tsx":"35","/Users/vasekmlejnsky/Developer/devbook/src/Home/Docs/SearchResultItem.tsx":"36","/Users/vasekmlejnsky/Developer/devbook/src/Home/Docs/DocsFilterModal.tsx":"37","/Users/vasekmlejnsky/Developer/devbook/src/Home/HotkeysPanel/GitHubCode/SearchHotkeysPanel.tsx":"38","/Users/vasekmlejnsky/Developer/devbook/src/components/Modal.tsx":"39","/Users/vasekmlejnsky/Developer/devbook/src/components/Select.tsx":"40","/Users/vasekmlejnsky/Developer/devbook/src/Home/HotkeysPanel/Panel.tsx":"41","/Users/vasekmlejnsky/Developer/devbook/src/hooks/useLockBodyScroll.ts":"42"},{"size":579,"mtime":1608735557785,"results":"43","hashOfConfig":"44"},{"size":5279,"mtime":1606213695804,"results":"45","hashOfConfig":"44"},{"size":3879,"mtime":1610389421369,"results":"46","hashOfConfig":"44"},{"size":1538,"mtime":1608217743389,"results":"47","hashOfConfig":"44"},{"size":7014,"mtime":1610389421353,"results":"48","hashOfConfig":"44"},{"size":45075,"mtime":1610452650053,"results":"49","hashOfConfig":"44"},{"size":3760,"mtime":1608040578710,"results":"50","hashOfConfig":"44"},{"size":2983,"mtime":1608040578704,"results":"51","hashOfConfig":"44"},{"size":4280,"mtime":1609164551606,"results":"52","hashOfConfig":"44"},{"size":83,"mtime":1608040578700,"results":"53","hashOfConfig":"44"},{"size":409,"mtime":1608735557785,"results":"54","hashOfConfig":"44"},{"size":5889,"mtime":1609675293595,"results":"55","hashOfConfig":"44"},{"size":6633,"mtime":1609107174998,"results":"56","hashOfConfig":"44"},{"size":3047,"mtime":1608217743390,"results":"57","hashOfConfig":"44"},{"size":3737,"mtime":1609107174996,"results":"58","hashOfConfig":"44"},{"size":1158,"mtime":1608040578711,"results":"59","hashOfConfig":"44"},{"size":2731,"mtime":1608454679720,"results":"60","hashOfConfig":"44"},{"size":3584,"mtime":1608454679721,"results":"61","hashOfConfig":"44"},{"size":2538,"mtime":1608040578705,"results":"62","hashOfConfig":"44"},{"size":3682,"mtime":1608454679719,"results":"63","hashOfConfig":"44"},{"size":453,"mtime":1609107174997,"results":"64","hashOfConfig":"44"},{"size":814,"mtime":1608040578729,"results":"65","hashOfConfig":"44"},{"size":182,"mtime":1609802039534,"results":"66","hashOfConfig":"44"},{"size":1065,"mtime":1608897439295,"results":"67","hashOfConfig":"44"},{"size":1267,"mtime":1608897439293,"results":"68","hashOfConfig":"44"},{"size":1146,"mtime":1610452650053,"results":"69","hashOfConfig":"44"},{"size":856,"mtime":1608040578711,"results":"70","hashOfConfig":"44"},{"size":3134,"mtime":1610389421358,"results":"71","hashOfConfig":"44"},{"size":7691,"mtime":1608079509856,"results":"72","hashOfConfig":"44"},{"size":630,"mtime":1608040578708,"results":"73","hashOfConfig":"44"},{"size":1166,"mtime":1608897439285,"results":"74","hashOfConfig":"44"},{"size":829,"mtime":1608897439287,"results":"75","hashOfConfig":"44"},{"size":2142,"mtime":1609802039535,"results":"76","hashOfConfig":"44"},{"size":905,"mtime":1608897439287,"results":"77","hashOfConfig":"44"},{"size":15164,"mtime":1610452650052,"results":"78","hashOfConfig":"44"},{"size":2197,"mtime":1609540016648,"results":"79","hashOfConfig":"44"},{"size":8533,"mtime":1610389421350,"results":"80","hashOfConfig":"44"},{"size":1093,"mtime":1608897439286,"results":"81","hashOfConfig":"44"},{"size":1455,"mtime":1608040578712,"results":"82","hashOfConfig":"44"},{"size":287,"mtime":1608040578713,"results":"83","hashOfConfig":"44"},{"size":2259,"mtime":1609164551607,"results":"84","hashOfConfig":"44"},{"size":343,"mtime":1608040578731,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"z4jise",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"/Users/vasekmlejnsky/Developer/devbook/src/index.tsx",[],["173","174"],"/Users/vasekmlejnsky/Developer/devbook/src/serviceWorker.ts",[],"/Users/vasekmlejnsky/Developer/devbook/src/mainProcess/index.ts",[],"/Users/vasekmlejnsky/Developer/devbook/src/App/index.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/Home/SearchInput.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/Home/index.tsx",["175","176","177"],"/Users/vasekmlejnsky/Developer/devbook/src/Preferences/index.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/Onboarding/index.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/Home/HotkeysPanel/Hotkey.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/Home/SearchItemFocusState.ts",[],"/Users/vasekmlejnsky/Developer/devbook/src/hooks/useIPCRenderer.ts",[],"/Users/vasekmlejnsky/Developer/devbook/src/Home/StackOverflow/StackOverflowModal.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/Home/StackOverflow/StackOverflowItem.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/Home/GitHub/CodeModal.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/Home/GitHub/CodeItem.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/components/Loader.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/Preferences/Pages/GeneralPreferences.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/Preferences/Pages/Integrations.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/Onboarding/pages/Introduction.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/Onboarding/pages/Shortcut.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/Home/HotkeysPanel/index.ts",[],"/Users/vasekmlejnsky/Developer/devbook/src/hooks/useDebounce.ts",[],"/Users/vasekmlejnsky/Developer/devbook/src/Home/Docs/index.ts",[],"/Users/vasekmlejnsky/Developer/devbook/src/search/stackOverflow.ts",[],"/Users/vasekmlejnsky/Developer/devbook/src/search/gitHub.ts",[],"/Users/vasekmlejnsky/Developer/devbook/src/search/docs.ts",[],"/Users/vasekmlejnsky/Developer/devbook/src/components/Button.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/Home/StackOverflow/StackOverflowBody.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/Home/GitHub/Code.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/Preferences/Pages/Base.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/Home/HotkeysPanel/GitHubCode/ModalHotkeysPanel.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/Home/HotkeysPanel/StackOverflow/SearchHotkeysPanel.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/Home/HotkeysPanel/Docs/SearchHotkeysPanel.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/Home/HotkeysPanel/StackOverflow/ModalHotkeysPanel.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/Home/Docs/DocPage.tsx",["178","179"],"import React, {\n  useRef,\n  useState,\n  useEffect,\n} from 'react';\nimport styled from 'styled-components';\nimport Prism from 'prismjs';\n\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport { openLink } from 'mainProcess';\nimport useDebounce from 'hooks/useDebounce';\nimport { ReactComponent as chevronImg } from 'img/chevron.svg';\n\n\n\nconst DocPageContainer = styled.div`\n  flex: 1;\n  padding: 10px 15px 20px;\n  height: 100%;\n  width: 100%;\n  min-width: 1px;\n  // background: #1b1b1b;\n  background: #1f1e1e;\n\n  //color: #E3E3E3;\n  color: #c1c9d2;\n  //color: #ced3d8;\n  font-size: 14px;\n  line-height: 1.65em;\n  font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Ubuntu,sans-serif;\n\n  overflow: hidden;\n  overflow-y: overlay;\n\n  h1 {\n    margin: 0;\n    padding: 15px 0;\n    color: #dcdcdc;\n    font-weight: 600;\n    font-size: 24px;\n    border-bottom: 1px solid #3B3A4A;\n  }\n\n  h2 {\n    margin: 0;\n    padding: 15px 0;\n    color: #dcdcdc;\n    font-weight: 600;\n    font-size: 20px;\n  }\n\n  h3 {\n    margin: 0;\n    padding: 15px 0;\n    color: #dcdcdc;\n    font-weight: 500;\n    font-size: 18px;\n  }\n\n  ul {\n    padding-left: 40px;\n    li {\n      :not(:last-child) {\n        margin-bottom: 10px;\n      }\n    }\n  }\n\n  code {\n    padding: 2px 4px;\n\n    color: #D9D9DA;\n    font-family: 'Roboto Mono';\n    font-size: 13px;\n    font-weight: 400;\n\n    background: #2a2933;\n    border-radius: 3px;\n  }\n\n  blockquote {\n    margin: 0 5px 0 10px;\n    position: relative;\n    padding: 0 15px;\n    color: rgba(255, 255, 255, 0.8);\n\n    :before {\n      content: \"\";\n      display: block;\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      width: 4px;\n      border-radius: 8px;\n      background: #555a5e;\n    }\n  }\n\n  /* Code block */\n  pre {\n    padding: 10px;\n    overflow-y: auto;\n\n    font-size: 13px;\n    font-family: 'Roboto Mono';\n    background: #373648;\n    border-left: 4px solid #5861d6;\n    border-radius: 3px;\n\n    code {\n      padding: 0;\n      background: transparent;\n      line-height: 1.4em;\n    }\n  }\n\n  a {\n    color: #4CACD6;\n    text-decoration: underline;\n  }\n\n  img {\n    max-width: 100%;\n    :hover {\n      cursor: pointer;\n    }\n  }\n\n  iframe {\n    padding: 3px;\n    border-radius: 5px;\n    background: #fff;\n  }\n\n  .devbook-highlight {\n    color: #000;\n    background: #FFFF3F;\n\n    font-size: inherit;\n    font-weight: inherit;\n    transition: none;\n  }\n\n  .devbook-highlight.selected {\n    background: #e46804;\n  }\n\n  /* MDN Specific (JS) */\n  .badge {\n    font-family: 'Roboto Mono';\n    font-weight: 600;\n    text-transform: lowercase;\n    font-size: 13px;\n    color: #87929c;\n  }\n\n  // <h3> title for parameters and return value.\n  #parameters, #return_value {\n    border-bottom: 1px solid #3B3A4A;\n  }\n\n  dl {\n    margin: 10px 0 0;\n    dt {\n      code {\n        font-weight: 500;\n        background: transparent;\n      }\n    }\n\n    dd {\n      margin: 5px 0 0 15px;\n\n      // Nested <dl> should have spacing.\n      dl {\n        margin-top: 10px;\n      }\n    }\n  }\n\n  .notecard.note {\n    padding: 1px 15px;\n    background: #1C2443;\n    border-left: 4px solid #1F4AE5;\n    border-radius: 3px;\n  }\n`;\n\nconst SearchInputWrapper = styled.div`\n  position: absolute;\n  top: 115px;\n  right: 20px;\n  min-height: 50px;\n\n  padding: 5px 10px;\n  display: flex;\n  align-items: center;\n  background: #111013;\n  border: 1px solid #434252;\n  border-radius: 5px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.8);\n`;\n\nconst SearchInput = styled.input`\n  width: 200px;\n  color: white;\n  font-family: 'Poppins';\n  font-size: 14px;\n\n  background: transparent;\n  border: none;\n  outline: none;\n\n  ::placeholder {\n    color: #5A5A6F;\n  }\n`;\n\nconst SearchDelimiter = styled.div`\n  width: 1px;\n  height: 25px;\n  margin: 0 10px;\n  background: #434252;\n`;\n\nconst SearchControls = styled.div`\n  padding: 0 5px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst HitCount = styled.span`\n  min-width: 70px;\n  text-align: right;\n  font-size: 14px;\n  color: #5A5A6F;\n`;\n\nconst ChevronButton = styled.button`\n  padding: 5px 0;\n\n  border: none;\n  background: none;\n  outline: none;\n\n  :hover {\n    cursor: pointer;\n    path {\n      stroke: #fff;\n    }\n  }\n\n  :first-child {\n    margin-right: 10px;\n  }\n`;\n\nconst ChevronUp = styled(chevronImg)`\n  transform: rotate(180deg);\n`;\n\nconst ChevronDown = styled(chevronImg)`\n`;\n\nfunction getTextNodeChildren(node: Node) {\n  let nodes: Node[] = [];\n  for (let n = node.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType === Node.TEXT_NODE) nodes.push(n);\n    nodes = nodes.concat(getTextNodeChildren(n));\n  }\n  return nodes;\n}\n\nfunction removeHighlight(node: Node) {\n  if (!node.parentNode) throw new Error('Cannot remove highlight on a node without parent');\n  if (node.childNodes.length === 0) throw new Error('Cannot remove highlight on a node without children');\n  const textNode = node.childNodes[0];\n  if (textNode.nodeType !== Node.TEXT_NODE || !textNode.nodeValue)\n    throw new Error('Cannot remove highlight on a node that does not have a text node.');\n\n  node.parentNode.insertBefore(document.createTextNode(textNode.nodeValue), node.nextSibling);\n  node.parentNode.removeChild(node);\n}\n\nfunction highlightNode(textNode: Node, startIdx: number, endIdx: number) {\n  if (textNode.nodeType !== Node.TEXT_NODE) throw new Error('Cannot highlight a node that is not of type TEXT_NODE');\n  if (!textNode.nodeValue) return;\n\n  const nodes: Node[] = [];\n  const infront = textNode.nodeValue.slice(0, startIdx);\n  if (infront) {\n    nodes.push(document.createTextNode(infront));\n  }\n\n  const highlight = textNode.nodeValue.slice(startIdx, endIdx+1);\n  const highlightEl = document.createElement('mark');\n  highlightEl.classList.add('devbook-highlight');\n  highlightEl.innerText = highlight;\n  nodes.push(highlightEl as Node);\n\n  const after = textNode.nodeValue.slice(endIdx+1);\n  if (after) {\n    nodes.push(document.createTextNode(after));\n  }\n\n  if (textNode.parentNode) {\n    nodes.forEach(newN => {\n      textNode.parentNode!.insertBefore(newN, textNode);\n    });\n    if (nodes.length > 0) {\n      textNode.parentNode.removeChild(textNode);\n    }\n    return highlightEl as Node;\n  }\n}\n\nfunction highlightPattern(textNodes: Node[], startIdx: number, pattern: string) {\n  let matchedLength = 0; // Length of a pattern substring that is already matched.\n  let wholeText = '';\n  const nodes: Node[] = [];\n  for (let i = 0; i < textNodes.length; i++) {\n    const n = textNodes[i];\n    if (!n.nodeValue) continue;\n    wholeText += n.nodeValue;\n\n    // This node contains the starting index of the matched pattern.\n    if (wholeText.length > startIdx && matchedLength < pattern.length) {\n      // Convert startIdx to an index relative to the current node.\n      // We must take the already matched pattern substring into an\n      // account.\n      const nodeStartIdx = (startIdx + matchedLength) - (wholeText.length - n.nodeValue.length);\n\n      let nodeEndIdx = 0;\n      if (pattern.length - matchedLength > n.nodeValue.length) {\n        // The pattern is longer than this node. We want to highlight the whole node.\n        nodeEndIdx = n.nodeValue.length - 1;\n      } else {\n        // The pattern is shorter and the same length is the current node\n        // and starts anywhere in the middle of the node.\n        nodeEndIdx = nodeStartIdx + (pattern.length - matchedLength - 1);\n      }\n      matchedLength += nodeEndIdx - nodeStartIdx + 1;\n      const highlightedNode = highlightNode(n, nodeStartIdx, nodeEndIdx);\n      if (highlightedNode) {\n        nodes.push(highlightedNode);\n      }\n    }\n  }\n  return nodes;\n}\n\nfunction selectHighlight(highlight: Highlight) {\n  highlight.nodes.forEach(n => {\n    (n as HTMLElement).classList.add('selected');\n  });\n  (highlight.nodes[0] as HTMLElement).scrollIntoView({ block: 'center' });\n}\n\nfunction deselectHighlight(highlight: Highlight) {\n  highlight.nodes.forEach(n => {\n    (n as HTMLElement).classList.remove('selected');\n  });\n}\n\ninterface Highlight {\n  index: number;\n  nodes: Node[];\n}\n\ninterface DocPageProps {\n  isDocsFilterModalOpened: boolean;\n  isSearchingInDocPage: boolean;\n  pageURL: string;\n  html: string;\n  searchInputRef: any;\n}\n\nfunction DocPage({\n  isDocsFilterModalOpened,\n  isSearchingInDocPage,\n  pageURL,\n  html,\n  searchInputRef,\n}: DocPageProps) {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const debouncedSearchQuery = useDebounce(searchQuery, 0);\n\n  const [highlights, setHighlights] = useState<Highlight[]>([]);\n  const [selectedIdx, setSelectedIdx] = useState(0);\n\n  function highlightCode(html: string) {\n    const el = document.createElement('html');\n    el.innerHTML = html;\n\n    const codes = el.getElementsByTagName('code');\n    for (const code of codes) {\n      const codeText = (code as HTMLElement).innerText;\n      if (codeText) {\n        // TODO: We could use the correct langague highlight based on the documentation.\n        const codeHTML = Prism.highlight(codeText, Prism.languages.clike, 'clike');\n        code.innerHTML = codeHTML;\n      }\n    }\n\n    const pres = el.getElementsByTagName('pre');\n    for (const pre of pres) {\n      const codeText = (pre as HTMLElement).innerText;\n      if (codeText) {\n        // TODO: We could use the correct langague highlight based on the documentation.\n        const codeHTML = Prism.highlight(codeText, Prism.languages.clike, 'clike');\n        pre.innerHTML = codeHTML;\n      }\n    }\n\n    // TODO: Load TEX language.\n    const maths = el.getElementsByTagName('math');\n    for (const math of maths) {\n      //console.log('math', math);\n      const mathText = (math as HTMLElement).innerText;\n      //console.log('mathText', mathText);\n      //console.log('Prism', Prism.languages)\n      if (mathText) {\n        // TODO: We could use the correct langague highlight based on the documentation.\n        const mathHTML = Prism.highlight(mathText, Prism.languages.tex, 'tex');\n        math.innerHTML = mathHTML;\n      }\n    }\n\n    return el.outerHTML || '<html></html>';\n  }\n\n  function selectNextHighlight() {\n    deselectHighlight(highlights[selectedIdx]);\n    if (selectedIdx < highlights.length - 1) {\n      selectHighlight(highlights[selectedIdx+1]);\n      setSelectedIdx(c => c += 1);\n    } else {\n      selectHighlight(highlights[0]);\n      setSelectedIdx(0);\n    }\n  }\n\n  function selectPreviousHighlight() {\n      deselectHighlight(highlights[selectedIdx]);\n    if (selectedIdx > 0) {\n      selectHighlight(highlights[selectedIdx-1]);\n      setSelectedIdx(c => c -= 1);\n    } else {\n      selectHighlight(highlights[highlights.length-1]);\n      setSelectedIdx(highlights.length - 1);\n    }\n  }\n\n  function handleSearchInputKeyDown(e: any) {\n    // Enter pressed.\n    if (searchQuery && e.keyCode === 13) {\n      if (e.shiftKey) {\n        selectPreviousHighlight();\n      } else {\n        selectNextHighlight();\n      }\n    }\n  }\n\n  // Open all links in the browser.\n  function handleDocPageClick(e: any) {\n    const target = e.target || e.srcElement;\n    console.log('TARGET', target);\n    // The 'target.parentNode' handles a case when <a> element contains a <code> element.\n    // If <code> element is inside the <a> element the event's target is actually the\n    // <code> element and not the <a> element. So we have to check if its parent is <a>.\n    if (target.tagName === 'A' || target.parentNode.tagName === 'A') {\n      let url = target.getAttribute('href') || target.parentNode.getAttribute('href');\n      if (\n        url.startsWith('.')\n        || url.startsWith('#')\n        || !url.startsWith('http://')\n        || !url.startsWith('https://')\n       ) {\n        url = new URL(url, pageURL).href;\n      }\n      openLink(url);\n      e.preventDefault();\n    }\n\n    if (target.tagName === 'IMG') {\n      let url = target.getAttribute('src');\n      if (\n        url.startsWith('.')\n        || url.startsWith('#')\n        || !url.startsWith('http://')\n        || !url.startsWith('https://')\n       ) {\n        url = new URL(url, pageURL).href;\n      }\n      openLink(url);\n      e.preventDefault();\n    }\n  }\n\n  useHotkeys('up', () => {\n    if (isSearchingInDocPage || isDocsFilterModalOpened) return;\n\n    if (containerRef?.current) {\n      containerRef.current.scrollBy(0, -15);\n    }\n  }, { filter: () => true }, [isSearchingInDocPage, isDocsFilterModalOpened]);\n\n  useHotkeys('down', () => {\n    if (isSearchingInDocPage || isDocsFilterModalOpened) return;\n\n    if (containerRef?.current) {\n      containerRef.current.scrollBy(0, 15);\n    }\n  }, { filter: () => true }, [isSearchingInDocPage, isDocsFilterModalOpened]);\n\n  useEffect(() => {\n    highlights.forEach(h => {\n      h.nodes.forEach(removeHighlight);\n    });\n    setHighlights([]);\n    setSelectedIdx(0);\n\n    if (!debouncedSearchQuery || !containerRef?.current) return;\n\n    const textNodes = getTextNodeChildren(containerRef.current as Node);\n    let wholeText = '';\n    textNodes.map(n => {\n      wholeText += n.nodeValue || '';\n    });\n\n    const escaped = debouncedSearchQuery\n      .toLowerCase()\n      .replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string.\n    const re = new RegExp(escaped, 'g');\n    let match: RegExpExecArray | null;\n    let highlightIndex = 0;\n    while ((match = re.exec(wholeText.toLowerCase())) !== null) {\n      // TODO: highlightPattern sometimes returns an empty array\n      const nodes = highlightPattern([...textNodes], match.index, debouncedSearchQuery);\n      if (nodes.length > 0) {\n        const highlight: Highlight = { index: highlightIndex++, nodes };\n        setHighlights(c => c.concat(highlight));\n\n        // Select the first highlight\n        if (highlight.index === 0) selectHighlight(highlight);\n      }\n    }\n  }, [setHighlights, debouncedSearchQuery]);\n\n  return (\n    <>\n      {isSearchingInDocPage &&\n        <SearchInputWrapper>\n          <SearchInput\n            ref={searchInputRef}\n            autoFocus\n            placeholder=\"Search in page\"\n            value={searchQuery}\n            onChange={e => setSearchQuery(e.target.value)}\n            onKeyDown={handleSearchInputKeyDown}\n          />\n          <HitCount>\n            <>\n            {searchQuery &&\n              <>\n                {highlights.length > 0 &&\n                  <span>{selectedIdx+1}/{highlights.length}</span>\n                }\n                {highlights.length === 0 &&\n                  <span>0/0</span>\n                }\n              </>\n            }\n            </>\n          </HitCount>\n          <SearchDelimiter/>\n          <SearchControls>\n            <ChevronButton\n              onClick={selectNextHighlight}\n            >\n              <ChevronDown/>\n            </ChevronButton>\n\n            <ChevronButton\n              onClick={selectPreviousHighlight}\n            >\n              <ChevronUp/>\n            </ChevronButton>\n          </SearchControls>\n        </SearchInputWrapper>\n      }\n      <DocPageContainer\n        id=\"doc-page\"\n        onClick={handleDocPageClick}\n        ref={containerRef}\n        dangerouslySetInnerHTML={{__html: highlightCode(html) as string}}\n      />\n    </>\n  );\n}\n\nexport default DocPage;\n\n","/Users/vasekmlejnsky/Developer/devbook/src/Home/Docs/SearchResultItem.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/Home/Docs/DocsFilterModal.tsx",["180","181","182","183"],"import React, {\n  useState,\n  useEffect,\n  useCallback,\n} from 'react';\nimport styled from 'styled-components';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport { DocSource } from 'search/docs';\nimport Modal from 'components/Modal';\nimport { ReactComponent as searchImg } from 'img/search.svg';\n\nconst StyledModal = styled(Modal)`\n  height: 100%;\n  margin: 60px 0 69px;\n  min-width: 550px;\n\n  display: flex;\n  flex-direction: column;\n\n  overflow: hidden;\n  background: #1C1B26;\n  border-radius: 5px;\n  border: 1px solid #3B3A4A;\n`;\n\nconst SearchWrapper = styled.div`\n  padding: 10px;\n  width: 100%;\n  background: #25252E;\n\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid #3B3A4A;\n`;\n\nconst SearchImg = styled(searchImg)`\n  margin-right: 8px;\n  height: auto;\n  width: 18px;\n\n  path {\n    stroke: #5A5A6F;\n  }\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n\n  color: #fff;\n  font-size: 15px;\n  font-weight: 400;\n  font-family: 'Poppins';\n\n  background: #25252E;\n  border: none;\n  outline: none;\n\n  ::placeholder {\n    color: #5A5A6F;\n  }\n`;\n\nconst Content = styled.div`\n  padding: 10px 0 50px;\n\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DocsListHeader = styled.div`\n  width: 100%;\n  padding: 0 10px;\n  margin-bottom: 10px;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst HeaderText = styled.span`\n  color: #5A5A6F;\n  font-size: 14px;\n  font-weight: 500;\n`;\n\nconst DocsListsWrapper = styled.div`\n  height: 100%;\n  width: 100%;\n\n  display: flex;\n  flex-direction: column;\n\n  overflow: overlay;\n`;\n\nconst DocsListIncluded = styled.div`\n  width: 100%;\n  margin-bottom: 20px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DocsListNotIncluded = styled.div`\n  width: 100%;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DocRow = styled.div<{ isFocused?: boolean, lastUsedNavigation: Navigation }>`\n  width: 100%;\n  padding: 5px 10px;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  border-bottom: 1px solid #262736;\n  background: ${props => props.isFocused && props.lastUsedNavigation === Navigation.Keys ? '#2C2F5A' : 'transparent'};\n\n  :hover {\n    ${props => props.lastUsedNavigation === Navigation.Mouse ? 'background: #2C2F5A' : ''};\n    cursor: pointer;\n  }\n`;\n\nconst DocName = styled.span`\n  color: #fff;\n  font-size: 14px;\n  font-weight: 500;\n`;\n\nconst DocToggle = styled.input`\n`;\n\n\ninterface DocsFilterModalProps {\n  docSources: DocSource[];\n  onDocSourceClick: (ds: DocSource) => void;\n  onCloseRequest?: () => void;\n}\n\nenum Navigation {\n  Mouse,\n  Keys,\n}\n\nfunction DocsFilterModal({\n  docSources,\n  onDocSourceClick,\n  onCloseRequest,\n}: DocsFilterModalProps) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const [selectedIdx, setSelectedIdx] = useState(0);\n\n  const [includedSources, setIncludedSources] = useState<DocSource[]>([]);\n  const [notIncludedSources, setNotIncludedSources] = useState<DocSource[]>([]);\n\n  const [lastUsedNavigation, setLastUseNavigation] = useState<Navigation>(Navigation.Keys);\n\n  const includedVisibleSources = useCallback(() => {\n    return includedSources.filter(ds => ds.name.toLowerCase().match(new RegExp(escapeRegex(searchQuery))));\n  }, [includedSources, searchQuery]);\n  const notIncludedVisibleSources = useCallback(() => {\n    return notIncludedSources.filter(ds => ds.name.toLowerCase().match(new RegExp(escapeRegex(searchQuery))));\n  }, [notIncludedSources, searchQuery]);\n\n  function escapeRegex(s: string) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  function toggleDocSource(docSource: DocSource, includedSlice: boolean) {\n    if (includedSlice) {\n      setIncludedSources(c =>\n        c.map(ds => ds.slug === docSource.slug ? {...ds, isIncludedInSearch: !ds.isIncludedInSearch} : ds)\n      );\n    } else {\n      setNotIncludedSources(c =>\n        c.map(ds => ds.slug === docSource.slug ? {...ds, isIncludedInSearch: !ds.isIncludedInSearch} : ds)\n      );\n    }\n    onDocSourceClick(docSource);\n  }\n\n  function handleDocRowMouseOver(idx: number, isInIncludedSlice: boolean) {\n    if (isInIncludedSlice) {\n      setSelectedIdx(idx);\n    } else {\n      setSelectedIdx(idx + includedVisibleSources().length);\n    }\n    setLastUseNavigation(Navigation.Mouse);\n  }\n\n  function handleInputKeyDown(e: any) {\n    if (e.key === 'ArrowUp' || e.key === 'ArrowDown') e.preventDefault();\n  }\n\n  useHotkeys('up', () => {\n    if (selectedIdx > 0) {\n      setSelectedIdx(c => c -= 1);\n    }\n    setLastUseNavigation(Navigation.Keys);\n  }, { filter: () => true }, [selectedIdx]);\n\n  useHotkeys('down', () => {\n    if (selectedIdx < includedVisibleSources().length + notIncludedVisibleSources().length - 1) {\n      setSelectedIdx(c => c += 1);\n    }\n    setLastUseNavigation(Navigation.Keys);\n  }, { filter: () => true }, [selectedIdx, notIncludedVisibleSources, includedVisibleSources]);\n\n  useHotkeys('enter', () => {\n    if (selectedIdx >= includedVisibleSources().length) {\n      const idx = selectedIdx - includedVisibleSources().length;\n      toggleDocSource(notIncludedVisibleSources()[idx], false);\n    } else {\n      toggleDocSource(includedVisibleSources()[selectedIdx], true);\n    }\n  }, { filter: () => true }, [selectedIdx, notIncludedVisibleSources, includedVisibleSources]);\n\n  useEffect(() => {\n    setSelectedIdx(0);\n  }, [searchQuery]);\n\n  useEffect(() => {\n    // Split doc sources into two arrays - included doc sources and not included ones.\n    const sorted = docSources\n      .sort((a, b) => (a.isIncludedInSearch === b.isIncludedInSearch) ? 0 : a.isIncludedInSearch ? -1 : 1);\n    const firstNotIncluded = sorted.findIndex(ds => !ds.isIncludedInSearch);\n    if (firstNotIncluded === -1) {\n      setNotIncludedSources(sorted.sort((a, b) => a.name.localeCompare(b.name)));\n    } else {\n      let includedSlice = sorted.slice(0, firstNotIncluded);\n      includedSlice = includedSlice\n        .sort((a, b) => a.name.localeCompare(b.name));\n      setIncludedSources(includedSlice);\n\n      let notIncludedSlice = sorted.slice(firstNotIncluded);\n      notIncludedSlice = notIncludedSlice\n        .sort((a, b) => a.name.localeCompare(b.name));\n      setNotIncludedSources(notIncludedSlice);\n    }\n  }, []);\n\n  return (\n    <StyledModal\n      onCloseRequest={onCloseRequest}\n    >\n      <SearchWrapper>\n        <SearchImg/>\n        <SearchInput\n          autoFocus\n          onKeyDown={handleInputKeyDown}\n          placeholder=\"Python, JavaScript, Docker, etc\"\n          value={searchQuery}\n          onChange={e => setSearchQuery(e.target.value)}\n        />\n      </SearchWrapper>\n      <Content>\n        <DocsListHeader>\n          <HeaderText>\n            NAME\n          </HeaderText>\n          <HeaderText>\n            INCLUDE IN SEARCH\n          </HeaderText>\n        </DocsListHeader>\n\n        <DocsListsWrapper>\n          {includedVisibleSources().length > 0 &&\n            <DocsListIncluded>\n              {includedVisibleSources().map((ds, idx) => (\n                <DocRow\n                  key={idx}\n                  onMouseOver={() => handleDocRowMouseOver(idx, true)}\n                  onClick={() => toggleDocSource(ds, true)}\n                  isFocused={idx === selectedIdx}\n                  lastUsedNavigation={lastUsedNavigation}\n                >\n                  <DocName>{ds.name}</DocName>\n                  <DocToggle\n                    type=\"checkbox\"\n                    checked={ds.isIncludedInSearch}\n                    onChange={() => {}}\n                  />\n                </DocRow>\n              ))}\n            </DocsListIncluded>\n          }\n\n          {notIncludedVisibleSources().length > 0 &&\n            <DocsListNotIncluded>\n              {notIncludedVisibleSources().map((ds, idx) => (\n                <DocRow\n                  key={idx}\n                  onMouseOver={() => handleDocRowMouseOver(idx, false)}\n                  onClick={() => toggleDocSource(ds, false)}\n                  isFocused={idx === selectedIdx - includedVisibleSources().length}\n                  lastUsedNavigation={lastUsedNavigation}\n                >\n                  <DocName>{ds.name}</DocName>\n                  <DocToggle\n                    type=\"checkbox\"\n                    checked={ds.isIncludedInSearch}\n                    onChange={() => {}}\n                  />\n                </DocRow>\n              ))}\n            </DocsListNotIncluded>\n          }\n        </DocsListsWrapper>\n      </Content>\n    </StyledModal>\n  );\n}\n\nexport default DocsFilterModal;\n\n","/Users/vasekmlejnsky/Developer/devbook/src/Home/HotkeysPanel/GitHubCode/SearchHotkeysPanel.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/components/Modal.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/components/Select.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/Home/HotkeysPanel/Panel.tsx",[],"/Users/vasekmlejnsky/Developer/devbook/src/hooks/useLockBodyScroll.ts",[],{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":763,"column":9,"nodeType":"190","messageId":"191","endLine":763,"endColumn":31},{"ruleId":"192","severity":1,"message":"193","line":832,"column":6,"nodeType":"194","endLine":832,"endColumn":38,"suggestions":"195"},{"ruleId":"192","severity":1,"message":"196","line":1289,"column":6,"nodeType":"194","endLine":1295,"endColumn":4,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":531,"column":21,"nodeType":"200","messageId":"201","endLine":531,"endColumn":23},{"ruleId":"192","severity":1,"message":"202","line":552,"column":6,"nodeType":"194","endLine":552,"endColumn":43,"suggestions":"203"},{"ruleId":"204","severity":1,"message":"205","line":123,"column":74,"nodeType":"190","messageId":"206","endLine":123,"endColumn":84},{"ruleId":"204","severity":1,"message":"205","line":126,"column":45,"nodeType":"190","messageId":"206","endLine":126,"endColumn":55},{"ruleId":"207","severity":1,"message":"208","line":174,"column":25,"nodeType":"209","messageId":"210","endLine":174,"endColumn":26,"suggestions":"211"},{"ruleId":"192","severity":1,"message":"212","line":248,"column":6,"nodeType":"194","endLine":248,"endColumn":8,"suggestions":"213"},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],"@typescript-eslint/no-unused-vars","'cacheScrollTopPosition' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'cancelSearchInDocPage'. Either include it or remove the dependency array.","ArrayExpression",["216"],"React Hook useEffect has a missing dependency: 'searchAll'. Either include it or remove the dependency array.",["217"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'highlights'. Either include it or remove the dependency array.",["218"],"@typescript-eslint/no-use-before-define","'Navigation' was used before it was defined.","noUseBeforeDefine","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["219","220"],"React Hook useEffect has a missing dependency: 'docSources'. Either include it or remove the dependency array.",["221"],"no-global-assign","no-unsafe-negation",{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"messageId":"228","fix":"229","desc":"230"},{"messageId":"231","fix":"232","desc":"233"},{"desc":"234","fix":"235"},"Update the dependencies array to be: [state.results, focusResultItem, cancelSearchInDocPage]",{"range":"236","text":"237"},"Update the dependencies array to be: [debouncedQuery, debouncedLastSearchedQuery, activeFilter, state.gitHubAccount.isConnected, state.docSources, searchAll]",{"range":"238","text":"239"},"Update the dependencies array to be: [setHighlights, debouncedSearchQuery, highlights]",{"range":"240","text":"241"},"removeEscape",{"range":"242","text":"243"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"244","text":"245"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [docSources]",{"range":"246","text":"247"},[20007,20039],"[state.results, focusResultItem, cancelSearchInDocPage]",[35510,35644],"[debouncedQuery, debouncedLastSearchedQuery, activeFilter, state.gitHubAccount.isConnected, state.docSources, searchAll]",[13753,13790],"[setHighlights, debouncedSearchQuery, highlights]",[3550,3551],"",[3550,3550],"\\",[6239,6241],"[docSources]"]